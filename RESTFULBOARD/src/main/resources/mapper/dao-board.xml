<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- dao 작성 -->
<!-- namespace : implememts와 같은 기능 -->
<!-- BoardMapper.java 인터페이스의 상속을 받아 구현하겠다는 뜻 -->
<!-- CDATA : 특수 문자(<, >, & 등)를 태그로 인식하지 않고 쿼리 코드라는 것을 명시 -->
<!-- 특수 문자가 없는 경우에도 넣어준 이유는 코드의 일관성과 나중에 쿼리가 수정될 수 있기 때문 -->
<mapper namespace="board.rest.api.mapper.BoardMapper">

	<!-- 게시글 관련 쿼리들 -->
    <select id="selectCount" resultType="int">
    	/* 게시글 개수 조회 */
    	<![CDATA[
    		SELECT
            	COUNT(*)
	        FROM
	            t_board
	        WHERE
	            deleted_yn = 'N'
    	]]>        
    </select>
    
	<select id="selectBoardList" parameterType="PagingVo" resultType="BoardDto">
		/* 게시글 목록 조회 */
		<![CDATA[
			SELECT
				board_idx,
				title,
				CASE
					WHEN EXISTS(
						SELECT 
							1 
						FROM 
							t_file
						WHERE
						   board_idx = t_board.board_idx
						AND
						   deleted_yn = 'N'
					)THEN 1
					ELSE 0
				END AS is_file,
				contents,
				hit_cnt,
				creator_id,
				created_datetime
			FROM
				t_board
			WHERE
				deleted_yn = 'N'
			ORDER BY board_idx DESC		
		]]>		
		<if test="startIndex != null and startIndex > -1 ">
			LIMIT #{startIndex},#{rowPerPage};
		</if>
	</select>
	
	<!-- useGeneratedKey : insert 문에서 insert된 auto-increment 또는 sequence로 생성된 기본 키의 값을 가져온다. -->
	<!-- keyProperty : 가져온 값을 담아주는 변수 -->
	<insert id="insertBoard" parameterType="BoardDto" useGeneratedKeys="true" keyProperty="boardIdx">
	    /* 게시글 등록 */
	    <![CDATA[
	        INSERT INTO t_board
	        (
	            title,
	            contents,
	            created_datetime,
	            creator_id
	        )
	        VALUES
	        (	#{title},
	            #{contents},
	            NOW(),
	            'admin'
	        )
	    ]]>
	</insert>
	
	<update id="updateHitCount" parameterType="int">
		/* 조회수 증가 */
		<![CDATA[
			UPDATE
				t_board
			SET
				hit_cnt = hit_cnt + 1
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	<select id="selectBoardDetail" parameterType="int" resultType="BoardDto">
		/* 해당 게시글 조회 */
		<![CDATA[
			SELECT
				board_idx,
				title,
				contents,
				hit_cnt,
				creator_id,
				created_datetime
			FROM
				t_board
			WHERE
				board_idx = #{boardIdx}
		]]>
	</select>
	
	<update id="modifyBoard" parameterType="BoardDto">
		/* 게시글 수정 */
		<![CDATA[
			UPDATE
				t_board
			SET
				title = #{title},
				contents = #{contents},
				updated_datetime = NOW(),
				updater_id = 'admin'
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	<!-- delete를 사용하지 않고 update를 사용하는 이유 -->
	<!-- db에서 아예 데이터를 삭제하지 않기 위해서 -->
	<!-- deleted_yn 컬럼을 'Y'로 수정해서 조회시에 보이지 않게만 한다. -->
	<!-- select 문에서 deleted_yn이 'N'인 것만 조회하는 조건 걸어뒀음 -->
	<update id="deleteBoard" parameterType="int">
		/* 게시글 삭제 */
		<![CDATA[
			 UPDATE
			 	t_board
			 SET
			 	deleted_yn = 'Y',
			 	updated_datetime = NOW(),
			 	updater_id = 'admin'
			 WHERE
			 	board_idx = #{boardIdx}
		]]>		
	</update>
	
	<!-- 첨부파일 관련 쿼리들 -->
	<insert id="insertFileList" parameterType="BoardFileDto">
	    /* 데이터베이스에 업로드 파일 정보 저장 */
	    <![CDATA[
	        INSERT INTO t_file
	        (
	            board_idx, original_file_name,
	            stored_file_path, file_size,
	            creator_id, created_datetime
	        )
	        VALUES
	    ]]>
	    /* 받아온 데이터(collection) : List 일 때 반복해서 쿼리 생성*/
	    <foreach collection="list" item="item" separator=",">
	        (
	            #{item.boardIdx},
	            #{item.originalFileName},
	            #{item.storedFilePath},
	            #{item.fileSize},
	            'admin',
	            Now()
	        )
	    </foreach>
	</insert>
	
	<!-- 바이트 크기로 저장되어 있기 때문에 킬로바이트 크기로 변환한다. -->
	<select id="selectFileList" parameterType="int" resultType="BoardFileDto">
	    /* 해당 첨부파일 전부 조회 */
	    <![CDATA[
	        SELECT
	            idx,
	            board_idx,
	            original_file_name,
	            stored_file_path,
	            FORMAT(ROUND(file_size / 1024), 0) AS file_size
	        FROM
	            t_file
	        WHERE
	            board_idx = #{boardIdx}
	        AND
	            deleted_yn = 'N'
	    ]]>
	</select>
	
	<select id="selectFileInfo" parameterType="BoardFileDto" resultType="BoardFileDto">
		/* 파일 정보 가져오기 */
		<![CDATA[
			SELECT
				original_file_name,
				stored_file_path,
				file_size
			FROM
				t_file
			WHERE
				idx = #{idx}
			AND
				board_idx = #{boardIdx}
			AND
				deleted_yn = 'N'
		]]>
	</select>
	
	<update id="deleteFile" parameterType ="int">
		/* 파일 삭제 상태로 변경 */
		<![CDATA[
			UPDATE
				t_file
			SET
				deleted_yn = 'Y',
				updator_id = 'admin',
				updated_datetime = Now()
			WHERE
				idx IN (
		]]>
			<foreach collection="list" item="item" separator=",">
				#{item}
			</foreach>
			)
	</update>
	
</mapper>